import pandas as pd

#reads in dataset fron github
data = pd.read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-10-17/taylor_all_songs.csv')

#subsets the dataframe to only attributes of interest
taylor_data = data[['album_name', 'album_release', 'artist', 'featuring', 'track_name', 'danceability', 'energy', 'acousticness']]

#Questions:
#1: What is the most danceable song?
#2: What is the most danceable album on average?
#3: Who is featured the most on Taylor's songs?
#4: What is the most energetic song?
#5: What is the most energetic album on average?
#6: How does energy correlate to danceability?
#7: What artist features Taylor the most?
#8: What is the trend in acousticness over time?

#Question 1: What is the most danceable song?
dancing = taylor_data[['track_name', 'danceability']].sort_values('danceability', ascending=False)
dancing_max = dancing.head(1)
#print(dancing_max)
#Observe that the track 'I Think He Knows' is the most danceable with a danceability of 0.897

#Question 2: What is the most danceable album on average?
dancing_albums = taylor_data[['album_name', 'danceability']].groupby(['album_name'])
dancing_albums_sorted = dancing_albums.first().sort_values('danceability', ascending=False)
dancing_albums_max = dancing_albums_sorted.head(1)
#print(dancing_albums_max)
#Observe that the album '1989' is the most danceable with an average danceability of 0.789

#Question 3: Who is featured the most on Taylor's songs?
featured_artists = taylor_data[['featuring', 'track_name']].groupby(['featuring'])
#print(featured_artists.first())





#Question 4:  What is the most energetic song?
dancing = real_data[['track_name', 'energy']].sort_values('danceability', ascending=True)
dancing_max = dancing.tail(1)
#print(dancing_max)
#Observe that the track '   ' is the most energetic with a energy level of 0.

#Question 5: What is the most energetic album on average?
dancing_albums = real_data[['album_name', 'energy']].groupby(['album_name'])
dancing_albums_sorted = dancing_albums.first().sort_values('danceability', ascending=True)
dancing_albums_max = dancing_albums_sorted.tail(1)
print(dancing_albums_max)
#Observe that the album '   ' is the most energetic with an average energy level of 0.
